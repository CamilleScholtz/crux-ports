#!/bin/bash
#
# egl-select: select active egl/gles libraries/extensions
#
# shamlessly modified gl-select script, authored by fine gentlemen below:
# Matt Housh, jaeger at morpheus dot net
# Jose V Beneyto, sepen at crux dot nu
#

NV_GLES_DIR="/usr/lib/.nvidia"

infoUsage() {
  echo "Usage: $(basename $0) [ status | use [xorg|nvidia] ]"
  exit 0
}

infoMissing() {
  echo "One or more of the non-xorg egl/gles backup files are missing."
  echo "This means either you're not using a non-xorg egl/gles setup, in which"
  echo "case nothing needs to be changed, OR your xorg backups are missing,"
  echo "which can be solved by reinstalling xorg-server and mesa3d packages."
  echo
  echo "Files:"
  getMissBackups
  exit 1
}

infoRevert() {
  echo "You appear to already be using a non-xorg egl/gles setup. Check that by"
  echo "using 'egl-select status', OR if the one selected isn't the correct one,"
  echo "revert to xorg and then select the correct new setup using:"
  echo "'egl-select use xorg; egl-select use <new egl/gles>'."
  echo
  echo "Files:"
  getExistBackups
  exit 1
}

checkInstalled() {
  # checks either a single port or list of ports
  local notInstalled=1
  for arg in $@; do
    if [ ! -z "`pkginfo -i | awk '{ print $1 }' | grep -e ^$arg$`" ]; then
      notInstalled=0
    fi
  done
  if [ $notInstalled -eq 1 ]; then
    if [ $# -eq 1 ]; then
      echo "$arg isn't installed!"
    else
      echo "None of the following ports are installed! (one is required)"
      for i in $@; do echo "  $i"; done
    fi
    exit 1
  fi
}

getMissBackups() {
  # get missing xorg backup'ed files
  for b in $BACKUPS; do if [ ! -f $b ]; then echo $b; fi; done
}

getExistBackups() {
  # get existing xorg backup'ed files
  for b in $BACKUPS; do if [ -f $b ]; then echo $b; fi; done
}

doEGLsymlinks() {
  [ ! -L /usr/lib/libEGL.so.1 ] && ln -sf libEGL.so.1.0.0 /usr/lib/libEGL.so.1
  [ ! -L /usr/lib/libEGL.so ] && ln -sf libEGL.so.1 /usr/lib/libEGL.so
  [ ! -L /usr/lib/libGLESv1_CM.so.1 ] && ln -sf libGLESv1_CM.so.1.1.0 /usr/lib/libGLESv1_CM.so.1
  [ ! -L /usr/lib/libGLESv1_CM.so ] && ln -sf libGLESv1_CM.so.1 /usr/lib/libGLESv1_CM.so
  [ ! -L /usr/lib/libGLESv2.so.2 ] && ln -sf libGLES.so.2.0.0 /usr/lib/libGLESv2.so.2
  [ ! -L /usr/lib/libGLESv2.so ] && ln -sf libGLESv2.so.2 /usr/lib/libGLESv2.so
   return 0
}

doStatus() {
  # check which selection its being used
  local file=$(file -h /usr/lib/libEGL.so.1.0.0 | awk '{ if (/symbolic link/) print $5; else print $1; }' | sed 's|:||')
  case $file in
    *libEGL.so.1.0.0) echo "* xorg egl/gles is selected" ;;
    *libEGL.so.1) echo "* nvidia egl/gles is selected" ;;
  esac
}

doUse() {
  # perform the selection for the following supported gl/glx setups
  local selection=$1
  local options=$2
  [ -z "$selection" ] && infoUsage
  case $selection in
    "xorg")
      # check for missing xorg backup'ed files
      local mbackups="$(getMissBackups)"
      [ ! -z "$mbackups" ] && infoMissing $mbackups
      # switch to xorg stuff
      (
      # libEGL/GLES
      rm -f /usr/lib/{libGLESv1_CM.so.1.1.0,libGLESv2.so.2.0.0,libEGL.so.1.0.0}
      [ ! -L /usr/lib/libGLESv1_so.1.1.0 ] && mv /usr/lib/libGLESv1_CM{_so_1_1,.so.1.1.0}
      [ ! -L /usr/lib/libGLESv2.so.2.0.0 ] && mv /usr/lib/libGLESv2{_so_2_0,.so.2.0.0}
      [ ! -L /usr/lib/libEGL.so.1.0.0 ] && mv /usr/lib/libEGL{_so_1_0,.so.1.0.0}
      doEGLsymlinks
      /sbin/ldconfig > /dev/null 2>&1
      ) && echo "* xorg egl/gles selected"
      ;;
    "nvidia")
      # is an nvidia port installed?
      checkInstalled nvidia nvidia-sl nvidia-legacy-96xx nvidia-legacy-71xx
      # check for the existence of xorg backups
      local ebackups="$(getExistBackups)"
      [ ! -z "$ebackups" ] && infoRevert $ebackups
      # switch to nvidia stuff
      (
      # libEGL/GLES
      [ ! -L /usr/lib/libGLESv1_so.1.1.0 ] && mv /usr/lib/libGLESv1_CM{.so.1.1.0,_so_1_1}
      ln -sf $NV_GLES_DIR/libGLESv1_CM.so.1.1.0 /usr/lib/libGLESv1_CM.so.1.1.0
      [ ! -L /usr/lib/libGLESv2.so.2.0.0 ] && mv /usr/lib/libGLESv2{.so.2.0.0,_so_2_0}
      ln -sf $NV_GLES_DIR/libGLESv2.so.2.0.0 /usr/lib/libGLESv2.so.2.0.0
      [ ! -L /usr/lib/libEGL.so.1.0.0 ] && mv /usr/lib/libEGL{.so.1.0.0,_so_1_0}
      ln -sf $NV_GLES_DIR/libEGL.so.1 /usr/lib/libEGL.so.1.0.0
      doEGLsymlinks
      /sbin/ldconfig > /dev/null 2>&1
      ) && echo "* nvidia gle/gles selected"
      ;;
    *)
      infoUsage
      ;;
  esac
  /sbin/ldconfig > /dev/null 2>&1
}

# backup files which are also provided by nvidia port
BACKUPS="
/usr/lib/libGLESv1_CM_so_1_1
/usr/lib/libGLESv2_so_2_0
/usr/lib/libEGL_so_1_0
"

# check for xorg ports; if they are not installed, why is this script even run?
checkInstalled xorg-server mesa3d

case $1 in
  status) doStatus ;;
  use) shift 1; doUse $@ ;;
  *) infoUsage ;;
esac

# End of file
